exit
@client
exit
 @client.programmes
@client.new
@client
exit
@client
exit
@client
exit
@client
exit
@programme
@client
exit
kill -9 pID
then
sudo lsof -wni tcp:3000
OR by this command
ps -aef | grep rails
Remove rails detached server by using command
If you detached you rails server by using command "rails -d" then,
OR Incase you're server was detached then follow below guidelines:
rm /your_project_path/tmp/pids/server.pid
and remove this server.pid file:
So place your path shown here /your_project_path/tmp/pids/server.pid
A server is already running. Check /your_project_path/tmp/pids/server.pid. Exiting
=> Ctrl-C to shutdown server
=> Run rails server -h for more startup options
=> Rails 4.0.4 application starting in development on http://0.0.0.0:3000
=> Booting WEBrick
when you run rails s
New Solutions
Also you can find this post for more options Rails Update to 3.2.11 breaks running multiple servers
exit
@client
exit
@client
exit
@client
exit
@client.programmes
@programme
@client
exit
@client
exit
@programme
@client
exit
val
Client.all
@clients
@programme
@client
val
exit
val
exit
@client
exit
@client
exit
@client
exit
@programme.clients
@existing_client = Client.find_by(params[:id])
@client.update
@client.programmes
@client
@programme
exit
@clients_programmes.current_scope
ClientsProgramme.current_scope
@enrolled
@clients_programmes
exit
@client = @clients_programme.(:client_id => @client.id)ex
@client = @clients_programme.(:client_id => @client.id)
@client = @clients_programme(:client_id => @client.id)
@client.id = @clients_programme.client_id
@client = @clients_programme.client_id
@clients_programmes.find(1)
@client = @clients_programme(:client_id => @client.id)
@clients_programmes.find(1)
@clients_programmes
@client.id = ClientsProgramme.client_id
@clients = ClientsProgramme.clients
@clients = @clients_programme.clients
@clients = @clients_programmes.clients
@client = @clients_programmes.client
@client
@clients_programmes = ClientsProgramme.all
exit
@client
@programme
exit
@programme.id
@client.id
ClientsProgramme.last
exit
@programme
client = ClientsProgramme.where(client_id: @client.id)
@client
client
ClientsProgramme.all
@client.clients_programmes
@client.programmes
@clients_programmes
@programme
exit
exigt
@client.programmes
@client.programmes << @programme
@client.programmes
@client.programme
@client
@programme
@protramme
exit
@client.programmes
@client
@client.programme
@client.programmes
@programme
@client
exit
self.clients_programmes.where(:programme_id => programme.id)
self.clients_programme.where(:programme_id => programme.id)
programme
exit
self.clients_programme.where(:programme_id => programme.id)
programme
exit
@clients_programme.save
@clients_programme
exit
@clients_programme
@clients_programme.save
@client
@clients_programme.save
@clients_programme
exit
@clients_programme
@clients_programm
@clients_programme.programme_term
@clients_programme.client_status
@clients_programme.save
@clients_programme
exit
 @clients_programme.client_status
@clients_programme.client_id
@clients_programme
exit
@clients_programme
@clients_programmes
exit
@clients_programme
exit
@client.clients_programmes
@client.save!
@client.clients_programmes
@client.programmes
@client
@programme
exit
@client
@client.clients_programmes
@client.save!
@client.clients_programmes
@client.clients_programme
@client
exit
@client
exit
ClientsProgramme.last
clients_programmes.last
@client = @programme.clients.create(client_params)
@programme
exit
@outcome
@client
exit
@outcome.save!
@outcome
outcome
@client
exit
@outcome.save!
@outcome.save
@outcome
@client
exit
@outcome.save
@outcome
@client
client
exit
@programme.clients
@client
@programme
exit
@organisation.programmes
@organisations
@organisation
